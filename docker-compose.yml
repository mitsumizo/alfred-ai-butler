version: '3.8'

services:
  api:
    build:
      context: .
      dockerfile: ./docker/backend.Dockerfile
    container_name: fastapi-app-portfolio
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
    depends_on:
      postgres:
        condition: service_healthy
    env_file:
      - ./.env

  streamlit:
    build:
      context: .
      dockerfile: ./docker/frontend.Dockerfile
    container_name: streamlit-app-portfolio
    ports:
      - "8501:8501"
    volumes:
      - ./frontend:/app
    depends_on:
      - api
    env_file:
      - ./.env

  postgres:
    image: ankane/pgvector
    container_name: postgres-portfolio
    env_file:
      - ./.env
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    restart: always
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5

  pgadmin:
    image: dpage/pgadmin4
    container_name: fastapi-pgadmin-portfolio
    env_file:
      - ./.env
    ports:
      - "5050:80"
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    depends_on:
      - postgres
  azurite:
    image: mcr.microsoft.com/azure-storage/azurite
    container_name: my-portfolio-azurite
    ports:
      - "10000:10000" # Blob service
      - "10001:10001" # Queue service
      - "10002:10002" # Table service
    volumes:
      - azurite-data:/data
    command: azurite --blobHost 0.0.0.0 --queueHost 0.0.0.0 --tableHost 0.0.0.0

networks:
  default:
    name: my-portfolio-network

volumes:
  azurite-data:
  postgres-data:
  pgadmin-data:
